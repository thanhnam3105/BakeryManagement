// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TestWebNetCore.Data;

#nullable disable

namespace TestWebNetCore.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250514073739_QMS_V23ddd")]
    partial class QMS_V23ddd
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TestWebNetCore.Models.Order", b =>
                {
                    b.Property<string>("cd_order")
                        .HasColumnType("text");

                    b.Property<string>("cd_branch")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("cd_create")
                        .HasColumnType("text");

                    b.Property<string>("cd_customer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("cd_payment_method")
                        .HasColumnType("text");

                    b.Property<string>("cd_staff")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("cd_status")
                        .HasColumnType("text");

                    b.Property<string>("cd_update")
                        .HasColumnType("text");

                    b.Property<string>("delivery_address")
                        .HasColumnType("text");

                    b.Property<DateTime?>("dt_create")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("dt_delivery")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("dt_order")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("dt_update")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("total_amount")
                        .HasColumnType("numeric");

                    b.HasKey("cd_order");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("TestWebNetCore.Models.Product", b =>
                {
                    b.Property<string>("cd_product")
                        .HasColumnType("text");

                    b.Property<string>("cd_category")
                        .HasColumnType("text");

                    b.Property<string>("cd_create")
                        .HasColumnType("text");

                    b.Property<string>("cd_size")
                        .HasColumnType("text");

                    b.Property<string>("cd_status")
                        .HasColumnType("text");

                    b.Property<string>("cd_update")
                        .HasColumnType("text");

                    b.Property<DateTime?>("dt_create")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("dt_update")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("image")
                        .HasColumnType("text");

                    b.Property<string>("nm_product")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal?>("price")
                        .HasColumnType("numeric");

                    b.HasKey("cd_product");

                    b.ToTable("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
