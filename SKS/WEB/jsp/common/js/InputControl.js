//========================================================================================
// チェック処理 [InputControl.js]
// 作成者：M.Jinbo
// 作成日：2009/03/13
// 概要  ：入力制御用関数
//========================================================================================

//========================================================================================
// プロパティ値取得処理
// 作成者：M.Jinbo
// 作成日：2009/03/13
// 引数  ：①oElement     ：タグオブジェクト
//       ：②attrName     ：属性名
//       ：③defaultValue ：デフォルト値
// 戻り値：取得値
// 概要  ：指定タグよりプロパティの値を取得する。
//========================================================================================
function getProperty(oElement, attrName, defaultValue) {

    //属性名が存在する場合、取得値を返す
    //属性名が存在しない場合、デフォルト値を返す
    return oElement.getAttribute(attrName) ? oElement.getAttribute(attrName) : defaultValue;

}

//========================================================================================
// 整数部取得処理
// 作成者：M.Jinbo
// 作成日：2009/03/13
// 引数  ：①s  ：対象値
// 戻り値：整数部
// 概要  ：引数の整数部のみを取得する。
//========================================================================================
function getIntPart(s) {

    var v = s, inter;

    if (s.toString().indexOf("-") == 0) {
        //符号を除いてチェック
        v = v.substr(1);
    }

    var dotPos = v.indexOf(".");
    if (dotPos != -1) {
        inter = v.substr(0, dotPos);
    } else {
        inter = v;
    }

    return inter;
}

//========================================================================================
// 小数部取得処理
// 作成者：M.Jinbo
// 作成日：2009/03/13
// 引数  ：①s  ：対象値
// 戻り値：小数部
// 概要  ：引数の小数部のみを取得する。
//========================================================================================
function getDecPart(s) {

    s = s.toString();

    var dotPos = s.indexOf(".");
    if (dotPos != -1) {
        return s.substr(dotPos + 1);
    } else {
        return "";
    }
}

//========================================================================================
// ゼロ埋め処理
// 作成者：M.Sakamoto
// 作成日：2014/03/13
// 引数  ：①val  ：対象値
// 戻り値：パディング済みの値
// 概要  ：パディング済みの値を取得する。
//========================================================================================
function funZeroPudding(val) {
    return ("0" + val).slice(-2);
}
