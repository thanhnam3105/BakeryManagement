<!-- ---------------------------------------------------------------------
// 試作/製法No入力操作
// 作成者：M.Jinbo
// 作成日：2009/03/25
// 概要  ：数字キー以外のキー押下時の機能を停止する。
//-------------------------------------------------------------------- -->

<PUBLIC:COMPONENT >

  <PUBLIC:ATTACH event="ondocumentready" FOR="element" onevent="_ondocumentready()" />

  <PUBLIC:METHOD NAME="refresh" />
  <PUBLIC:METHOD NAME="require" />
  <PUBLIC:METHOD NAME="error" />
  <PUBLIC:METHOD NAME="focus" />
  <PUBLIC:METHOD NAME="enable" />
  <PUBLIC:METHOD NAME="check" />

</PUBLIC:COMPONENT>

<SCRIPT>

//+----------------------------------------------------------------------------
// ELEMENT VARIABLES
//-----------------------------------------------------------------------------

var _prop = new Object(); //プロパティ連想配列
var oORG = new Object();  //状態保存オブジェクト
var oINP;
var documentready = false;

//+----------------------------------------------------------------------------
// ELEMENT EVENT
//-----------------------------------------------------------------------------


//ondocumentready時
function _ondocumentready() {

    if (documentready) {
        return;
    } else {
        documentready = true;
    }

    //プロパティの取得
    _prop.enabled      = getProperty(element, "enabled", true);
    _prop.format       = getProperty(element, "format", "");
    _prop.defaultfocus = getProperty(element, "defaultFocus", false);
    _prop.required     = getProperty(element, "required", false);

    oINP=element.getElementsByTagName("INPUT").item(0);

    oINP.format =_prop.format;
    oINP.style.behavior = "url(../common/htc/bh_cd.htc)";

    oORG.elm_defaultfocus = element.defaultfocus;
    oORG.inp_tabIndex = oINP.tabIndex;
    oORG.inp_readOnly = oINP.readOnly;
    oORG.inp_stylebackgroundColor = oINP.style.backgroundColor;

    element.dataItem = oINP.dataFld;

}


//+----------------------------------------------------------------------------
// ELEMENT METHOD
//-----------------------------------------------------------------------------
function refresh() {
    alert("This Function is not available.");
}

function focus() {
    oINP.focus();
}

function error() {
    oINP.error=true;
}

//入力チェック
function check() {
    return true;
}

function require() {

    if (oINP.value == "") {
        oINP.style.borderColor = requireBorderColor;
        return false;
    } else {
        oINP.style.borderColor = "";
        return true;
    }

}

function enable(bool) {

    _prop.enabled = bool;

    if (bool == false) {
        element.defaultfocus = false;
        oINP.tabIndex = -1;
        oINP.readOnly = true;
        oINP.style.backgroundColor = disableBackgroundColor;

    } else {
        element.defaultfocus = oORG.elm_defaultfocus;
        oINP.tabIndex = oORG.inp_tabIndex;
        oINP.readOnly = oORG.inp_readOnly;
        oINP.style.backgroundColor = oORG.inp_stylebackgroundColor;
    }
}

</SCRIPT>
